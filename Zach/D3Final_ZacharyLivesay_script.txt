-- Team: T11
-- Team Members:
-- Member 1: Gavin Phillips
-- Member 2: Zachary Livesay
-- Member 3: Nalia Pope
-- Member 4: Paul Rajapandi
-- Member 5: Rob Shovan

-- drop all the tables we are going to create
drop table orders;
drop table customers;
drop table inventory;
drop table menu_items;
drop table waiters;
drop table restaurants;
drop table cuisines;

-- drop all the sequences we are going to create
drop sequence cuisine_id_seq;
drop sequence restaurant_id_seq;
drop sequence waiter_id_seq;
drop sequence menu_item_id_seq;
drop sequence inventory_id_seq;
drop sequence customer_id_seq;
drop sequence order_id_seq;

-- create the cuisines table
create table cuisines (
    cuisine_id number not null,
    cuisine_name varchar2(20) not null,
    constraint cuisine_id_pk
        primary key (cuisine_id)
);

-- create the restaurants table
create table restaurants (
    restaurant_id number not null,
    restaurant_name varchar2(50) not null,
    restaurant_street_address varchar2(100) not null,
    restaurant_city varchar2(50) not null,
    restaurant_state varchar2(2) not null,
    restaurant_zipcode number not null,
    restaurant_cuisine_id number not null,
    constraint restaurant_id_pk
        primary key (restaurant_id),
    constraint restaurant_fk_cuisine_id
        foreign key (restaurant_cuisine_id)
        references cuisines (cuisine_id)
);

-- create the waiters table
create table waiters (
    waiter_id number not null,
    waiter_name varchar2(50) not null,
    waiter_restaurant_id number not null,
    constraint waiter_id_pk
        primary key (waiter_id),
    constraint waiter_fk_restaurant_id
        foreign key (waiter_restaurant_id)
        references restaurants (restaurant_id)
);

-- create the menu_items table
create table menu_items (
    menu_item_id number not null,
    menu_item_cuisine_id number not null,
    menu_item_name varchar2(20) not null,
    menu_item_price number not null,
    constraint menu_item_id_pk
        primary key (menu_item_id),
    constraint menu_fk_cuisine_id
        foreign key (menu_item_cuisine_id)
        references cuisines (cuisine_id)
);

-- create the inventory table
create table inventory (
    inventory_id number not null,
    inventory_menu_item_id number not null,
    inventory_menu_item_name varchar2(20) not null,
    inventory_restaurant_id number not null,
    inventory_quantity number not null,
    constraint inventory_id_pk
        primary key (inventory_id),
    constraint inventory_fk_menu_item_id
        foreign key (inventory_menu_item_id)
        references menu_items (menu_item_id),
    constraint inventory_fk_restaurant_id
        foreign key (inventory_restaurant_id)
        references restaurants (restaurant_id)
);

-- create the customers table
create table customers (
    customer_id number not null,
    customer_name varchar2(50) not null,
    customer_email varchar2(50) not null,
    customer_street_address varchar2(100) not null,
    customer_city varchar2(50) not null,
    customer_state varchar2(2) not null,
    customer_zipcode number not null,
    customer_credit_card number not null,
    constraint customer_id_pk
        primary key (customer_id)
);

-- create the orders table
create table orders (
    order_id number not null,
    order_restaurant_id number not null,
    order_customer_id number not null,
    order_menu_item_id number not null,
    order_waiter_id number not null,
    order_date DATE not null,
    order_amount_paid number not null,
    order_tip number not null,
    constraint order_id_pk
        primary key (order_id),
    constraint order_fk_restaurant_id
        foreign key (order_restaurant_id)
        references restaurants (restaurant_id),
    constraint order_fk_customer_id
        foreign key (order_customer_id)
        references customers (customer_id),
    constraint order_fk_menu_item_id
        foreign key (order_menu_item_id)
        references menu_items (menu_item_id),
    constraint order_fk_waiter_id
        foreign key (order_waiter_id)
        references waiters (waiter_id)
);

-- create sequences for primary keys
create sequence cuisine_id_seq start with 1;
create sequence restaurant_id_seq start with 1;
create sequence waiter_id_seq start with 1;
create sequence menu_item_id_seq start with 1;
create sequence inventory_id_seq start with 1;
create sequence customer_id_seq start with 1;
create sequence order_id_seq start with 1;

-- insert sample cuisines into database
INSERT INTO cuisines values(cuisine_id_seq.nextval, 'American');
INSERT INTO cuisines VALUES(cuisine_id_seq.nextval, 'BBQ');
INSERT INTO cuisines VALUES(cuisine_id_seq.nextval, 'Indian');
INSERT INTO cuisines VALUES(cuisine_id_seq.nextval, 'Italian');
INSERT INTO cuisines VALUES(cuisine_id_seq.nextval, 'Ethiopian');

-- insert sample restaurants into database
INSERT into restaurants values(restaurant_id_seq.nextval, 'Buds Diner', '1601 N Main St', 'Tarboro', 'NC', 27886, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'));
INSERT INTO restaurants VALUES(restaurant_id_seq.nextval, 'Chilis Bar and Grill', '502 Baltimore Pike', 'Bel Air', 'MD', 21014, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'BBQ'));
INSERT INTO restaurants VALUES(restaurant_id_seq.nextval, 'Kabob and Curry', '827 Nursery Rd', 'Linthicum Heights', 'MD', 21090, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Indian'));
INSERT INTO restaurants VALUES(restaurant_id_seq.nextval, 'Mama Santas', '729A Frederick Rd', 'Catonsville', 'MD', 21228, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Italian'));
INSERT INTO restaurants VALUES(restaurant_id_seq.nextval, 'Suya Spot Ethiopian Grill', '10309 Grand Central Ave', 'Owings Mills', 'MD', 21117, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Ethiopian'));

-- insert sample waiters into database
INSERT INTO waiters VALUES (waiter_id_seq.nextval, 'Zachary Livesay', 1);
INSERT INTO waiters VALUES (waiter_id_seq.nextval, 'Kenny Somaiya', 1);
INSERT INTO waiters VALUES (waiter_id_seq.nextval, 'Matthew Sachs', 1);

-- insert values into menu_items table
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'), 'burger', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'), 'fries', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'), 'pasta', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'), 'salad', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'American'), 'salmon', 13);

INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'BBQ'), 'steak', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'BBQ'), 'pork loin', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'BBQ'), 'fillet mignon', 13);

INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Indian'), 'dal soup', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Indian'), 'rice', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Indian'), 'tandoori chicken', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Indian'), 'samosa', 13);

INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Italian'), 'lasagna', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Italian'), 'meatballs', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Italian'), 'spaghetti', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Italian'), 'pizza', 13);

INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Ethiopian'), 'meat chunks', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Ethiopian'), 'legume stew', 13);
INSERT INTO menu_items VALUES (menu_item_id_seq.NEXTVAL, (SELECT cuisine_id FROM cuisines WHERE cuisine_name = 'Ethiopian'), 'flatbread', 13);


-- insert values into inventory table
INSERT INTO inventory VALUES (inventory_id_seq.NEXTVAL, (SELECT menu_item_id FROM menu_items WHERE menu_item_name = 'burger'), 'burger', 1, 11);
INSERT INTO inventory VALUES (inventory_id_seq.NEXTVAL, (SELECT menu_item_id FROM menu_items WHERE menu_item_name = 'steak'), 'steak', 2, 40);
INSERT INTO inventory VALUES (inventory_id_seq.NEXTVAL, (SELECT menu_item_id FROM menu_items WHERE menu_item_name = 'samosa'), 'samosa', 3, 23);
INSERT INTO inventory VALUES (inventory_id_seq.NEXTVAL, (SELECT menu_item_id FROM menu_items WHERE menu_item_name = 'pizza'), 'pizza', 4, 60);
INSERT INTO inventory VALUES (inventory_id_seq.NEXTVAL, (SELECT menu_item_id FROM menu_items WHERE menu_item_name = 'legume stew'), 'legume stew', 5, 17);

-- insert sample customers into database
insert into customers values (customer_id_seq.nextval, 'John Smith', 'jsmith@gmail.com', '100 Light Street', 'Baltimore', 'MD', '21048', '1234567890123456');
insert into customers values (customer_id_seq.nextval, 'Jane Smith', 'smithj@gmail.com', '200 Light Street', 'Baltimore', 'MD', '21049', '1234567890123456');
insert into customers values (customer_id_seq.nextval, 'Bill W', 'wbill@gmail.com', '300 Light Street', 'Baltimore', 'MD', '21098', '1234567890123456');
insert into customers values (customer_id_seq.nextval, 'Julia E', 'ejulia@gmail.com', '150 Light Street', 'Baltimore', 'MD', '21030', '1234567890123456');
insert into customers values (customer_id_seq.nextval, 'Chuck R', 'rchuck@gmail.com', '900 Light Street', 'Baltimore', 'MD', '21093', '1234567890123456');

-- insert sample orders into database
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 1, 1, 1, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 1, 1, 1, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 2, 1, 2, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 2, 1, 2, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 20);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 3, 1, 3, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 3, 1, 3, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 20);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 4, 1, 3, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 1, 4, 1, 3, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 10);


--turn on server output
set serveroutput on;


-- MEMBER 2

create or replace function FIND_RESTAURANT_ID
 (RestaurantName IN varchar2) RETURN number 
is
 RID restaurants.restaurant_id%type;
 
begin
 select restaurant_id
 into RID
 from restaurants
 where restaurant_name = RestaurantName;
 return RID;
end;
/

create or replace procedure Hire_Waiter
 (WaiterName IN varchar2, RestaurantName IN varchar2)
is
 WName varchar2(50);
 RName varchar2(50);
 RID number;
 
begin
 WName := WaiterName;
 RName := RestaurantName;
 RID := FIND_RESTAURANT_ID(RName);
 Insert into Waiters values (waiter_id_seq.nextval, WName, RID);
end;
/

create or replace procedure Show_Waiter_List
 (RestaurantName IN varchar2)
is
cursor waiters_cursor is
    select Waiter_ID, Waiter_Name, Waiter_Restaurant_ID
    from Waiters;
  waiters_rec waiters_cursor%rowtype; 
  
  RName varchar(50);
  RID number;
 
begin
 RName := RestaurantName;
 RID := FIND_RESTAURANT_ID(RName);

 for waiters_rec in waiters_cursor
 loop
 if waiters_rec.waiter_restaurant_id = RID then dbms_output.put_line('Waiter ID: ' || waiters_rec.Waiter_ID || ', Waiter Name: ' || waiters_rec.Waiter_Name
 || ', Waiter Restaurant ID: ' || waiters_rec.Waiter_Restaurant_ID || chr(10));
 --exit when waiters_cursor%notfound;
 end if;
 end loop;
end;
/

declare
 TestName varchar2(50) := 'Patrick Livesay';
 TestRestaurant varchar2(50) := 'Chilis Bar and Grill';
 
 TestName2 varchar2(50) := 'Ryan Dablo';
 TestRestaurant2 varchar2(50) := 'Kabob and Curry';
 
 TestName3 varchar2(50) := 'Jesse Parham';
 TestRestaurant3 varchar2(50) := 'Mama Santas';
 
 TestName4 varchar2(50) := 'Alex Cochrane';
 TestRestaurant4 varchar2(50) := 'Suya Spot Ethiopian Grill';
 
 TestRestaurant5 varchar2(50) := 'Buds Diner';
Begin
 Hire_Waiter(TestName, TestRestaurant);
 Hire_Waiter(TestName2, TestRestaurant2);
 Hire_Waiter(TestName3, TestRestaurant3);
 Hire_Waiter(TestName4, TestRestaurant4);
 Show_Waiter_List(TestRestaurant5);
end;
/

--- inserting extra orders for state tips
INSERT INTO orders VALUES (order_id_seq.nextval, 2, 5, 1, 4, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 15);
INSERT INTO orders VALUES (order_id_seq.nextval, 3, 5, 1, 5, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 25);
INSERT INTO orders VALUES (order_id_seq.nextval, 4, 5, 1, 6, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 5);
INSERT INTO orders VALUES (order_id_seq.nextval, 5, 5, 1, 7, to_date('2022-JAN-15', 'YYYY-MON-DD'), 50, 0);

create or replace procedure Report_Tips

is
 cursor orders_cursor is
	select w.WAITER_ID, SUM(o.ORDER_TIP) as SumOfTips
	from waiters w, orders o
	where w.waiter_ID = o.ORDER_WAITER_ID
    group by w.WAITER_ID;
 orders_rec orders_cursor%rowtype; 
 
begin
 for orders_rec in orders_cursor
 loop
 dbms_output.put_line('Waiter ID: ' || orders_rec.Waiter_ID || ', Accumulated Tips: ' || orders_rec.SumOfTips || chr(10));
 end loop;
end;
/

exec Report_Tips;

create or replace procedure Report_Tips_By_State

is
 cursor orders_cursor is
	select r.RESTAURANT_STATE, SUM(o.ORDER_TIP) as SumOfTips
	from restaurants r, orders o
	where r.RESTAURANT_ID = o.ORDER_RESTAURANT_ID
    group by r.RESTAURANT_STATE;
 orders_rec orders_cursor%rowtype; 
 
begin
 for orders_rec in orders_cursor
 loop
 dbms_output.put_line('State: ' || orders_rec.RESTAURANT_STATE || ', Accumulated Tips: ' || orders_rec.SumOfTips || chr(10));
 end loop;
end;
/

exec Report_Tips_By_State;

